{
  "swagger" : "2.0",
  "info" : {
    "description" : "TBD",
    "version" : "0.1.0",
    "title" : "Settlement Service",
    "termsOfService" : "See http://tbd.bambora.com/terms_of_use",
    "contact" : {
      "name" : "support-to-be-defined@bambora.com"
    },
    "license" : {
      "name" : "TBD",
      "url" : "http://tbd.bambora.com/licenses/LICENSE-1.0.html"
    }
  },
  "host" : "localhost:5002",
  "basePath" : "/settlement_service",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json", "application/problem+json" ],
  "paths" : {
    "/settlements" : {
      "get" : {
        "tags" : [ "settlement" ],
        "summary" : "Get all settlements for merchant",
        "description" : "This endpoint gets a list of settlements.\n",
        "operationId" : "get_settlements",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "Used for pagination, specifies the index of the first item to be\nreturned. The range is zero-based (0 is the first item).\n",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Used for pagination, specifies the number of items to be returned.\n",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "maximum" : 5000.0,
          "minimum" : 1.0
        }, {
          "name" : "merchant_id",
          "in" : "query",
          "description" : "Filter on specific merchant id (UUID)\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}$"
        }, {
          "name" : "from_date",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "to_date",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/SettlementList"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/settlements/intervals" : {
      "get" : {
        "tags" : [ "settlement" ],
        "summary" : "Aggregated settlement sums in intervals over a timespan",
        "description" : "Aggregated settlement sums in intervals over a timespan for a merchant\n",
        "operationId" : "get_intervals",
        "parameters" : [ {
          "name" : "from_date",
          "in" : "query",
          "description" : "Specifies the from date of the timespan.\n",
          "required" : true,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "to_date",
          "in" : "query",
          "description" : "Specifies the to date of the timespan.\n",
          "required" : true,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "aggregate_by",
          "in" : "query",
          "description" : "Specifies the aggregation interval.\n",
          "required" : true,
          "type" : "string",
          "enum" : [ "day" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Intervals successfully collected",
            "schema" : {
              "$ref" : "#/definitions/IntervalsContainer"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/settlements/{id}" : {
      "get" : {
        "tags" : [ "settlement" ],
        "summary" : "Get specific settlement",
        "description" : "This endpoint gets a specific settlement by id\n",
        "operationId" : "get_settlement",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}$"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/SettlementObjectContainer"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "uuid" : {
      "type" : "string",
      "description" : "Unique identifier (UUID)"
    },
    "merchant_id" : {
      "type" : "string",
      "description" : "Bambora Merchant Id (for Legal Entity)"
    },
    "currency" : {
      "type" : "string",
      "description" : "Currency according to ISO 4217"
    },
    "ascii" : {
      "type" : "string",
      "description" : "String with only ascii, minlength 1"
    },
    "amount" : {
      "type" : "integer",
      "description" : " Always expressed in minor units of the given currency. Negative amount implies a withdrawal, positive a deposit."
    },
    "amount_exponent" : {
      "type" : "integer",
      "description" : " Amount exponent",
      "enum" : [ "0", "2", "3" ]
    },
    "Settlement" : {
      "type" : "object",
      "required" : [ "adjustment_set", "amount", "amount_exponent", "beneficiary_account", "chargeback_set", "currency", "id", "reference", "report_date_time", "transactionreference_set", "transfer_date" ],
      "properties" : {
        "id" : {
          "description" : "Unique settlement id (UUID)",
          "$ref" : "#/definitions/uuid"
        },
        "report_date_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "DateTime when the settlement report was created"
        },
        "transfer_date" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date when payment instructions sent to Bambora's bank"
        },
        "reference" : {
          "type" : "string",
          "description" : "Referrence attached to payment",
          "pattern" : "^[ -~]{1,30}$"
        },
        "beneficiary_account" : {
          "type" : "string",
          "description" : "Bank account number of beneficiary",
          "pattern" : "^[ -~]{1,34}$"
        },
        "amount" : {
          "$ref" : "#/definitions/amount"
        },
        "currency" : {
          "$ref" : "#/definitions/currency"
        },
        "amount_exponent" : {
          "$ref" : "#/definitions/amount_exponent"
        },
        "chargeback_set" : {
          "$ref" : "#/definitions/ChargebackList"
        },
        "adjustment_set" : {
          "$ref" : "#/definitions/AdjustmentList"
        },
        "transactionreference_set" : {
          "$ref" : "#/definitions/TransactionReferenceList"
        }
      },
      "description" : "Settlement Data"
    },
    "SettlementObjectContainer" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/MerchantToSettlement"
        }
      },
      "description" : "Container for singel settlement data item"
    },
    "SettlementObject" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Settlement"
        }
      },
      "description" : "Object containing a Settlement data item"
    },
    "SettlementList" : {
      "type" : "object",
      "required" : [ "data", "total" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MerchantToSettlement"
          }
        },
        "total" : {
          "type" : "integer",
          "description" : "The number of items the query would return without limit/offset",
          "minimum" : 0.0
        }
      },
      "description" : "Object containing Settlement data items"
    },
    "Chargeback" : {
      "type" : "object",
      "required" : [ "amount", "amount_exponent", "case_id", "currency", "date", "id", "reason", "reason_code", "source_transaction_ref" ],
      "properties" : {
        "id" : {
          "description" : "Unique chargeback id (UUID)",
          "$ref" : "#/definitions/uuid"
        },
        "case_id" : {
          "type" : "string",
          "description" : " Bambora-generated reference. Used in all correspondence between Disputes and merchant.",
          "pattern" : "^[ -~]{15}$"
        },
        "source_transaction_ref" : {
          "type" : "string",
          "description" : " Transaction reference of source. Merchant-supplied transaction reference. Should normally match the value used in the authorization request.",
          "pattern" : "^[ -~]{1,14}$"
        },
        "reason_code" : {
          "type" : "string",
          "description" : " Card scheme-specific reason code. May be known to merchant.",
          "pattern" : "^[ -~]{2,4}$"
        },
        "reason" : {
          "type" : "string",
          "description" : " Description in English for the chargeback reason.",
          "pattern" : "^[ -~]{1,50}$"
        },
        "date" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date when the chargeback was received by Bambora."
        },
        "merchant_id" : {
          "$ref" : "#/definitions/merchant_id"
        },
        "amount" : {
          "$ref" : "#/definitions/amount"
        },
        "currency" : {
          "$ref" : "#/definitions/currency"
        },
        "amount_exponent" : {
          "$ref" : "#/definitions/amount_exponent"
        }
      },
      "description" : "Chargeback data"
    },
    "ChargebackList" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Chargeback"
      }
    },
    "Adjustment" : {
      "type" : "object",
      "required" : [ "amount", "amount_exponent", "currency", "id", "reason", "reason_code" ],
      "properties" : {
        "id" : {
          "description" : "Unique adjustment id (UUID)",
          "$ref" : "#/definitions/uuid"
        },
        "reason_code" : {
          "description" : " Internal reason code. Not for exposure to merchant.",
          "$ref" : "#/definitions/ascii"
        },
        "reason" : {
          "type" : "string",
          "description" : " Short description of the adjustment. Language can vary depending on recipient.",
          "pattern" : "^[ -~]{1,120}$"
        },
        "merchant_id" : {
          "$ref" : "#/definitions/merchant_id"
        },
        "amount" : {
          "$ref" : "#/definitions/amount"
        },
        "currency" : {
          "$ref" : "#/definitions/currency"
        },
        "amount_exponent" : {
          "$ref" : "#/definitions/amount_exponent"
        }
      },
      "description" : "Adjustment data"
    },
    "AdjustmentList" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Adjustment"
      }
    },
    "TransactionReference" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "description" : "Unique transaction reference id (UUID)",
          "$ref" : "#/definitions/uuid"
        },
        "merchant_id" : {
          "$ref" : "#/definitions/merchant_id"
        }
      },
      "description" : "Reference to settled transactions"
    },
    "TransactionReferenceList" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/TransactionReference"
      }
    },
    "MerchantToSettlement" : {
      "type" : "object",
      "required" : [ "merchant_id", "settlement" ],
      "properties" : {
        "merchant_id" : {
          "$ref" : "#/definitions/merchant_id"
        },
        "settlement" : {
          "$ref" : "#/definitions/Settlement"
        }
      },
      "description" : "Merchant to Settlement mapping"
    },
    "Error" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "integer",
          "description" : "HTTP error code"
        },
        "title" : {
          "type" : "string",
          "description" : "Title of problem, e.g. Bad Request"
        },
        "detail" : {
          "type" : "string",
          "description" : "Detailed human readable error description"
        },
        "type" : {
          "type" : "string",
          "description" : "Problem type, ref to URI"
        }
      },
      "description" : " Error response according to draft https://datatracker.ietf.org/doc/draft-ietf-appsawg-http-problem/?include_text=1"
    },
    "Interval" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "description" : "Count of elements in interval"
        },
        "amount_sum" : {
          "type" : "integer",
          "description" : "Sum of elements in interval"
        },
        "amount_exponent" : {
          "type" : "integer",
          "description" : " Amount exponent"
        },
        "currency" : {
          "type" : "string",
          "description" : " Currency according to ISO 4217",
          "pattern" : "^[A-Z]{3}$"
        },
        "interval" : {
          "type" : "string",
          "description" : " Date time string for the interval"
        },
        "ids" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/uuid"
          }
        }
      },
      "description" : "Interval object"
    },
    "IntervalsByCurrency" : {
      "type" : "object",
      "properties" : {
        "currency" : {
          "type" : "string",
          "description" : " Currency according to ISO 4217",
          "pattern" : "^[A-Z]{3}$"
        },
        "intervals" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Interval"
          }
        }
      },
      "description" : "Intervals by currency"
    },
    "IntervalsContainer" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IntervalsByCurrency"
          }
        }
      },
      "description" : "Intervals object"
    }
  }
}