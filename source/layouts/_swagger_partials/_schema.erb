<%# Recursively print schema definitions %>
<%# requires local variables: 
      :schema_title => the name of the schema definitions
      :definitions => the definitions object of the swagger file 
%> 

<% schema_body = definitions["#{schema_title}"] %>
<% required = schema_body.required %>

<span class="schema">
  
  <!-- schema title -->
  <span class="schema-title">
    <a href="#"><%= schema_title %></a>
  </span>
  <span class="syntax">{</span>
  
  <span class="schema-body">
  <!-- schema properties -->

  <% if schema_body.properties %>
  <% schema_body.properties.each do |prop| %>

    <% prop_name = prop[0] %>
    <% prop_body = prop[1] %>


    <!-- If the property is a reference to other schema --> 
    <% if prop_body.to_h["$ref"] %>
      <% schema_title = prop_body.to_h["$ref"].split('/').last %>
      <% prop_desc = partial "layouts/_swagger_partials/schema", 
          :locals => {
            :schema_title => schema_title, 
            :definitions => definitions
      } %>

    <!-- else if property is an array --> 
    <% elsif prop_body.type == "array" %> 
      <% items = prop_body.items %>

      <!-- if it's an array of primitives: -->
      <% if prop_body.items.type %>
        <% prop_desc = "array of #{prop_body.items.type}" %>
      
      <!-- else it's an array of objects: -->
      <% else %>
        <% schema_title = prop_body.items.to_h["$ref"].split('/').last %>
        <% prop_desc = "<span class='syntax'>array of </span>" %>
        <% prop_desc += partial "layouts/_swagger_partials/schema", 
              :locals => {
                :schema_title => schema_title, 
                :definitions => definitions 
        } %>
      <% end %>

    <!-- otherwise it's a primitive type --> 
    <% else %> 
      <% prop_desc = partial "layouts/_swagger_partials/property", 
          :locals => { :property => prop_body } %>
    <% end %>      

    <span class="property">
      
      <!-- mark fields required --> 

      <span class="name"><%= prop_name %><!-- comment whitespace to remove span spacing
        --><% if required and required.include? prop_name %><!--
          --><span class="fg-danger">*</span>
        <% end %>      
      </span> 
      <span class="syntax">:</span>
      <span class="description"><%= prop_desc %></span>
    </span> 
  <% end %>
  <% end %>
  </span> <!-- /.schema-body -->
  <span class="syntax">}</span>
</span>