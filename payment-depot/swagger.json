{
  "swagger" : "2.0",
  "info" : {
    "description" : "Demo",
    "version" : "0.1.0",
    "title" : "Payment Service Depot Demo",
    "termsOfService" : "See http://tbd.bambora.com/terms_of_use",
    "contact" : {
      "name" : "support-to-be-defined@bambora.com"
    },
    "license" : {
      "name" : "TBD",
      "url" : "http://tbd.bambora.com/licenses/LICENSE-1.0.html"
    }
  },
  "host" : "localhost:5001",
  "basePath" : "/payment_service",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json", "application/problem+json" ],
  "paths" : {
    "/payments" : {
      "get" : {
        "tags" : [ "transaction" ],
        "summary" : "Get all transactionss for merchant",
        "description" : "This endpoint gets a list of transactions\n",
        "operationId" : "get_transactions",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "Used for pagination, specifies the first item to be returned.\nThe range is zero-based (0 is the first item).\n",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Used for pagination, specifies the number of items to be returned.\n",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "maximum" : 5000.0,
          "minimum" : 1.0
        }, {
          "name" : "merchant_id",
          "in" : "query",
          "description" : "Filter on specific merchant id (UUID)\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}$"
        }, {
          "name" : "settlement_id",
          "in" : "query",
          "description" : "Filter on specific settlement id (UUID)\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}$"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/TransactionListContainer"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/payments/aggregates/sums" : {
      "get" : {
        "tags" : [ "transaction" ],
        "summary" : "Get sum of settled_amount per settlement",
        "description" : "This endpoints gets the transaction amount sum (gross sales)\nper settlement.\nNote that the settlement_id query param is required.\n",
        "operationId" : "get_aggregates_sums",
        "parameters" : [ {
          "name" : "settlement_id",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}$"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/AggregatesSumsContainer"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/payments/intervals" : {
      "get" : {
        "tags" : [ "transaction" ],
        "summary" : "Aggregated transaction sums in intervals over a timespan",
        "description" : "Aggregated transaction sums in intervals over a timespan for a merchant\n",
        "operationId" : "get_intervals",
        "parameters" : [ {
          "name" : "from_date",
          "in" : "query",
          "description" : "Specifies the from date of the timespan.\n",
          "required" : false,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "to_date",
          "in" : "query",
          "description" : "Specifies the to date of the timespan.\n",
          "required" : false,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "aggregate_by",
          "in" : "query",
          "description" : "Specifies the aggregation interval.\n",
          "required" : true,
          "type" : "string",
          "enum" : [ "day", "hour" ]
        }, {
          "name" : "settlement_ids",
          "in" : "query",
          "description" : "Specifies the aggregation interval.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Intervals successfully collected",
            "schema" : {
              "$ref" : "#/definitions/IntervalsContainer"
            }
          },
          "400" : {
            "description" : "Bad requestt",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/payments/rejected" : {
      "get" : {
        "tags" : [ "transaction" ],
        "summary" : "Get all rejected transactions for merchant",
        "description" : "This endpoints gets all rejected transactions\n",
        "operationId" : "get_rejected_transactions",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "Used for pagination, specifies the first item to be returned.\nThe range is zero-based (0 is the first item).\n",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0.0
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Used for pagination, specifies the number of items to be returned.\n",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "maximum" : 5000.0,
          "minimum" : 1.0
        }, {
          "name" : "merchant_id",
          "in" : "query",
          "description" : "Filter on specific merchant id (UUID)\n",
          "required" : false,
          "type" : "string",
          "pattern" : "^[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}$"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/RejectedTransactionListContainer"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "uuid" : {
      "type" : "string",
      "description" : "Unique identifier (UUID)"
    },
    "Interval" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "description" : "Count of elements in interval"
        },
        "amount_sum" : {
          "type" : "integer",
          "description" : "Sum of elements in interval"
        },
        "amount_exponent" : {
          "type" : "integer",
          "description" : " Amount exponent"
        },
        "currency" : {
          "type" : "string",
          "description" : " Currency according to ISO 4217",
          "pattern" : "^[A-Z]{3}$"
        },
        "interval" : {
          "type" : "string",
          "description" : " Date time string for the interval"
        }
      },
      "description" : "Interval object"
    },
    "IntervalsByCurrency" : {
      "type" : "object",
      "properties" : {
        "currency" : {
          "type" : "string",
          "description" : " Currency according to ISO 4217",
          "pattern" : "^[A-Z]{3}$"
        },
        "intervals" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Interval"
          }
        }
      },
      "description" : "Intervals by currency"
    },
    "IntervalsContainer" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IntervalsByCurrency"
          }
        }
      },
      "description" : "Intervals object"
    },
    "RejectedTransaction" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : " Unique Transaction Id (UUID)",
          "readOnly" : true,
          "pattern" : "^[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}$"
        },
        "date_time" : {
          "type" : "string",
          "description" : " DateTime of transaction, reported by terminal"
        },
        "reference" : {
          "type" : "string",
          "description" : "Rejected transaction reference"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of transaction, e.g. Sale"
        },
        "currency" : {
          "type" : "string",
          "description" : " Currency according to ISO 4217"
        },
        "amount" : {
          "type" : "string",
          "description" : " Always expressed in minor units of the given currency. Negative amount implies a withdrawal, positive a deposit."
        },
        "amount_exponent" : {
          "type" : "string",
          "description" : " Amount exponent"
        },
        "card_number" : {
          "type" : "string",
          "description" : " Masked card number"
        },
        "merchant_id" : {
          "type" : "string",
          "description" : " Bambora Merchant Id (for Legal Entity)",
          "pattern" : "^[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}$"
        },
        "reason_code" : {
          "type" : "string",
          "description" : " Reason code for rejected transaction"
        },
        "reason" : {
          "type" : "string",
          "description" : " Reason for rejected transaction"
        },
        "batch_reference" : {
          "type" : "string",
          "description" : " Merchant-supplied or system-generated batch reference.",
          "pattern" : "^[ -~]{1,35}$"
        },
        "batch_reason_code" : {
          "type" : "string",
          "description" : " Reason code for batch level rejection"
        },
        "batch_reason" : {
          "type" : "string",
          "description" : " Reason for batch level rejection"
        }
      },
      "description" : "Rejected transaction data"
    },
    "AggregatesSums" : {
      "type" : "object",
      "required" : [ "number_of_transactions", "sales_currency", "sales_exponent", "sales_sum" ],
      "properties" : {
        "sales_currency" : {
          "type" : "string",
          "description" : " Currency according to ISO 4217",
          "pattern" : "^[A-Z]{3}$"
        },
        "sales_sum" : {
          "type" : "integer",
          "description" : " Always expressed in minor units of the given currency."
        },
        "sales_exponent" : {
          "type" : "integer",
          "description" : " Amount exponent"
        },
        "number_of_transactions" : {
          "type" : "integer",
          "description" : " The number of transactions summed"
        }
      },
      "description" : "Object containing the sum of sales and msc for a specific settlement"
    },
    "AggregatesSumsContainer" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/AggregatesSums"
        }
      },
      "description" : "Object containing an aggregated sum data item"
    },
    "RejectedTransactionListContainer" : {
      "type" : "object",
      "required" : [ "data", "total" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RejectedTransaction"
          }
        },
        "total" : {
          "type" : "integer",
          "description" : "The number of items the query would return without limit/offset",
          "minimum" : 0.0
        }
      },
      "description" : "Object containing rejected transaction data items"
    },
    "Transaction" : {
      "type" : "object",
      "required" : [ "amount", "amount_exponent", "card_number", "card_scheme", "card_type", "currency", "date_time", "id", "reference", "reversal", "type" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : " Unique Transaction Id (UUID)",
          "pattern" : "^[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}$"
        },
        "date_time" : {
          "type" : "string",
          "description" : " DateTime of transaction, reported by terminal"
        },
        "source_merchant_id" : {
          "type" : "string",
          "description" : " Source merchant id",
          "pattern" : "^[ -~]{2,9}$"
        },
        "settlement_id" : {
          "type" : "string",
          "description" : " Reference to the settlement id in the settlement service",
          "pattern" : "^[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}$"
        },
        "reference" : {
          "type" : "string",
          "description" : " Transaction reference",
          "pattern" : "^[ -~]{1,12}$"
        },
        "type" : {
          "type" : "string",
          "description" : " Type of transaction, e.g. Sale",
          "enum" : [ "Sale", "Refund", "Cash advance", "Invalid" ]
        },
        "currency" : {
          "type" : "string",
          "description" : " Currency according to ISO 4217",
          "pattern" : "^[A-Z]{3}$"
        },
        "amount" : {
          "type" : "integer",
          "description" : " Always expressed in minor units of the given currency. Negative amount implies a withdrawal, positive a deposit."
        },
        "amount_exponent" : {
          "type" : "integer",
          "description" : " Amount exponent"
        },
        "card_number" : {
          "type" : "string",
          "description" : " Masked card number",
          "pattern" : "^[ -~]{,19}$"
        },
        "card_scheme" : {
          "type" : "string",
          "description" : " Card Scheme",
          "enum" : [ "Amex", "Diners Club", "SEB Kort", "Resurs Bank", "Mastercard", "Visa", "Maestro", "Private label" ]
        },
        "card_type" : {
          "type" : "string",
          "description" : " Card Type",
          "enum" : [ "Debit", "Credit", "Commercial", "Other" ]
        },
        "batch_reference" : {
          "type" : "string",
          "description" : " Merchant-supplied or system-generated batch reference.",
          "pattern" : "^[ -~]{1,35}$"
        },
        "reversal" : {
          "type" : "boolean",
          "description" : " If this is a reversal transaction"
        },
        "interchange_set" : {
          "$ref" : "#/definitions/InterchangeSet"
        },
        "commission_amount" : {
          "type" : "integer",
          "description" : "Commission amount per transaction"
        },
        "commission_exponent" : {
          "type" : "integer",
          "description" : "Commission exponent"
        },
        "commission_currency" : {
          "type" : "string",
          "description" : "Commission currency"
        }
      },
      "description" : "Transaction Data"
    },
    "TransactionListContainer" : {
      "type" : "object",
      "required" : [ "data", "total" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Transaction"
          }
        },
        "total" : {
          "type" : "integer",
          "description" : "The number of items the query would return without limit/offset",
          "minimum" : 0.0
        }
      },
      "description" : "Object containing Transaction data items"
    },
    "InterchangeResponse" : {
      "type" : "object",
      "required" : [ "amount", "amount_exponent", "currency", "fee_type", "id", "report_date_time" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : " Unique Transaction Id (UUID)",
          "pattern" : "^[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}$"
        },
        "report_date_time" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "DateTime when the interchange report was created"
        },
        "fee_type" : {
          "type" : "string",
          "description" : "Type of fee; interchange or scheme",
          "enum" : [ "interchange", "scheme" ]
        },
        "currency" : {
          "type" : "string",
          "description" : " Currency according to ISO 4217",
          "pattern" : "^[A-Z]{3}$"
        },
        "amount" : {
          "type" : "integer",
          "description" : " Always expressed in minor units of the given currency. Negative amount implies a withdrawal, positive a deposit."
        },
        "amount_exponent" : {
          "type" : "integer",
          "description" : " Amount exponent"
        }
      },
      "description" : "Interchange Data"
    },
    "InterchangeSet" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/InterchangeResponse"
      }
    },
    "Error" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "integer",
          "description" : "HTTP error code"
        },
        "title" : {
          "type" : "string",
          "description" : "Title of problem, e.g. Bad Request"
        },
        "detail" : {
          "type" : "string",
          "description" : "Detailed human readable error description"
        },
        "type" : {
          "type" : "string",
          "description" : "Problem type, ref to URI"
        }
      },
      "description" : " Error response according to draft https://datatracker.ietf.org/doc/draft-ietf-appsawg-http-problem/?include_text=1"
    }
  }
}